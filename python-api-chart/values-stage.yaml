# python-api-chart/values-stage.yaml

# Override the full name of the release to be specific to stage
fullnameOverride: "python-api-stage"

# Staging environment might have a moderate number of replicas
replicaCount: 2

# Image settings - typically uses a release candidate or stable tag
image:
  repository: miuasyehor/python-api
  pullPolicy: IfNotPresent
  tag: "latest" # Your Docker image tag

# HPA settings for stage
hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 4 # Allow more scaling than dev
  targetMemoryUtilizationPercentage: 80

# Resource requests and limits for stage (might be closer to prod)
resources:
  requests:
    memory: "384Mi" # Slightly less than prod, more than dev
    cpu: "0.75"
  limits:
    memory: "768Mi"
    cpu: "1.5"

# Busybox load generator settings for stage
busyboxLoadgen:
  enabled: false # Usually disabled in stage
  # resources:
  #   requests:
  #     memory: "220Mi"
  #     cpu: "100m"
  #   limits:
  #     memory: "250Mi"
  #     cpu: "200m"

# Stage-specific settings
service:
  type: ClusterIP
  port: 80
  targetPort: 5000

# Example: Enable ingress with a staging hostname
ingress:
  enabled: false # Set to true if you use ingress for stage
  # className: "nginx"
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  # hosts:
  #   - host: stage.python-api.example.com
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  # tls:
  #   - secretName: stage-python-api-tls
  #     hosts:
  #       - stage.python-api.example.com